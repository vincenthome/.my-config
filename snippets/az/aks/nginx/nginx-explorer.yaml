apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-explorer-deployment
spec:
  selector:
    matchLabels:
      app: nginx-explorer
  replicas: 3 # tells deployment to run 3 pods matching the template
  template:
    metadata:
      labels:
        app: nginx-explorer
    spec:
      containers:
        - name: nginx80
          image: k8s033122acr.azurecr.io/nginx-explorer:latest
          ports:
            - containerPort: 80
          env:
            - name: NGINX_PORT
              value: "80"
            # Reference a ConfigMap SPECIFIC Environment Variables (mulit-line values work badly)
            - name: NGINX_EXPLORER_MY_CONFIGMAP_KEY_MY_INLINE_KEY
              valueFrom:
                configMapKeyRef:
                  # `name` here must match the name specified in the ConfigMap 
                  name: my-configmap
                  # `key` here must match the inline key specified in the ConfigMap
                  key: my-inline-key
            - name: NGINX_EXPLORER_MY_SECRET_KEY_USERNAME
              valueFrom:
                secretKeyRef:
                  # `name` here must match the name specified in the Secret
                  name: my-secret
                  # `key` here must match the key specified in the Secret 
                  key: username
            - name: NGINX_EXPLORER_MY_SECRET_KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  # `name` here must match the name specified in the Secret
                  name: my-secret
                  # `key` here must match the key specified in the Secret 
                  key: password
                  
          # Reference a ConfigMap ALL Environment Variables and `envFrom`
          envFrom:
            - configMapRef:
                name: my-configmap
          # Mount the volume that contains the configuration data into your container filesystem
          volumeMounts:
            # `name` here must match the name from the volumes section of this pod
            - name: my-configmap-volume
              # folder to hold the files where the filename is the key, its content has the value 
              mountPath: /etc/config
            # `name` here must match the name from the volumes section of this pod
            - name: my-secret-volume
              # folder to hold the files where the filename is the key, its content has the value 
              mountPath: /etc/secret
              readOnly: true

        - name: nginx81
          image: k8s033122acr.azurecr.io/nginx-explorer:latest
          ports:
            - containerPort: 81
          env:
            - name: NGINX_PORT
              value: "81"
      # Add the ConfigMap as a volume to the Pod
      volumes:
        # `name` here must match the name specified in the volume mount
        - name: my-configmap-volume
          # Populate the volume with config map data
          configMap:
            # `name` here must match the name specified in the ConfigMap created in k8s
            name: my-configmap
        - name: my-secret-volume
          # Populate the volume with secret data
          secret:
            # `secretName` here must match the name specified in the Secret created in k8s
            secretName: my-secret
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-explorer-http
  annotations:
    # nginx-explorer-http.<location>.cloudapp.azure.com
    service.beta.kubernetes.io/azure-dns-label-name: nginx-explorer-http
  labels:
    app: nginx-explorer
spec:
  type: LoadBalancer
  selector:
    app: nginx-explorer
  ports:
    - name: http80
      protocol: TCP
      port: 8080
      # let k8s auto-assign NodePort, since Azure very slow to remove NodePort service
      # nodePort: 30080
      targetPort: 80
    - name: http81
      protocol: TCP
      port: 8081
      # let k8s auto-assign NodePort, since Azure very slow to remove NodePort service
      # nodePort: 30081
      targetPort: 81
---
